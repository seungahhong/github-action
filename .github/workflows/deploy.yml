name: Delete Branch & Create Branch

on:
  # schedule:
  #   - cron: '55 22 * * *' # AM 07:55, South Korea!
  workflow_dispatch:
    # 값도 받을 수 있습니다. region, env 말고 원하시는 값들을 받을 수도 있겠죠?
    inputs:
      region:
        required: true
        type: string
      env:
        required: true
        type: string

jobs:
  delete-branch:
    runs-on: ubuntu-latest
    steps:
      # 해당 저장소의 코드를 가져옵니다.
      - name: Git checkout
        uses: actions/checkout@v3
      # 해당 브랜치를 삭제한다.
      - name: Delete branch
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{github.token}}
          branches: stage

  create-branch:
    needs: delete-branch
    runs-on: ubuntu-latest
    steps:
      # 해당 저장소의 코드를 가져옵니다.
      - name: Git checkout
        uses: actions/checkout@v3

      # 해당 브랜치를 생성한다.
      - name: create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          branch: stage

  stage-merge-master-pr-branch:
    needs: create-branch
    runs-on: ubuntu-latest

    steps:
      # 현재 날짜를 얻어와서 릴리즈 브랜치명으로 변경
      - name: Get Current Release Branch
        id: release
        run: echo "::set-output name=branch::$(date +'release/v%Y%m%d')"

      # 릴리즈 브랜치명 출력
      - name: Echo Release Branch
        run: echo ${{ steps.release.outputs.branch }}

      # 해당 저장소의 코드를 가져옵니다.(PR과 상관없는 브랜치로 checkout, 안 그럴경우 액션 오류)
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: master

      # stage 브랜치 머지
      - name: Merge release branch -> stage
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: ${{ steps.release.outputs.branch }}
          target_branch: stage
          github_token: ${{ github.token }}

      # main 브랜치 PR
      - name: Create PR to main
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          source_branch: ${{ steps.release.outputs.branch }}
          target_branch: main
          title: ${{ steps.release.outputs.branch }} pull request
          body: '**Automated pull request**'
          label: frontend
          new_string: '** Automatic pull request**'
          get_diff: true
          allow_no_diff: true

  slack-notify:
    needs: stage-merge-master-pr-branch
    runs-on: ubuntu-latest

    steps:
      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: seungah.hong
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.
